/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;
import javax.swing.SwingConstants;

import org.kordamp.ikonli.entypo.Entypo;
import org.kordamp.ikonli.fontawesome5.FontAwesomeSolid;
import org.kordamp.ikonli.swing.FontIcon;

import Controlador.ConectPropiedades;
import Modelo.Propiedad;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import RSMaterialComponent.RSButtonIconOne;
import rojeru_san.efectos.ValoresEnum.ICONS;
import RSMaterialComponent.RSButtonIconTwo;

import java.awt.Color;
import java.awt.Font;
import necesario.Global.THEMETOOLTIP;
import RSMaterialComponent.RSButtonShapeIcon;
import RSMaterialComponent.RSButtonShapeIcon.FORMA;
import Vista.MainMenu;
import RSMaterialComponent.RSButtonShape;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import RSMaterialComponent.RSTextFieldTwo;
import newscomponents.RSDateChooser;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import RSMaterialComponent.RSTextFieldOne;
import java.awt.SystemColor;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

import rojeru_san.complementos.RSCustomPopuMenu;
import javax.swing.JScrollPane;
import RSMaterialComponent.RSTableMetroCustom;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import RSMaterialComponent.RSLabelTextIcon;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

/**
 *
 * @author RavenPC
 */
public class RegistrarImagen extends javax.swing.JPanel {

    RSTableMetroCustom tblImagen = new RSTableMetroCustom();
    String rol = "";
	
    /**
     * Creates new form Panel1
     */
    public RegistrarImagen() {
    	setBackground(new Color(255, 255, 255));
        initComponents();
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblTitulo.setBounds(0, 0, 785, 37);
        lblTitulo.setForeground(new Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(SwingConstants.CENTER);

        lblTitulo.setBackground(new Color(0, 80, 112));
        lblTitulo.setFont(new Font("Dubai", Font.BOLD, 20)); // NOI18N
        lblTitulo.setText("Agregar Im\u00E1genes  a Propiedad :");
        lblTitulo.setOpaque(true);
        
        RSButtonShape btnshpAgregarCliente = new RSButtonShape();
        btnshpAgregarCliente.setEnabled(false);
        btnshpAgregarCliente.addActionListener(new ActionListener() {
        	@Override
        	public void actionPerformed(ActionEvent e) {
        		//JOptionPane.showMessageDialog(null, "LOS DATOS DEL CLIENTE FUERON ACTUALIZADOS EXITOSAMENTE", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);      	
        		//MensajeOK mensaje = new MensajeOK("GUARDAR CLIENTE", "EL CLIENTE FUE GUARDADO EXITOSAMENTE");
        		//mensaje.setVisible(true);
            	MainMenu.panelBody.removeAll();
            	MainMenu.panelBody.add(new RegistroDetalleProp(rol));
            	MainMenu.panelBody.repaint();
            	MainMenu.panelBody.revalidate();
        	
        	}
        });
        btnshpAgregarCliente.setBounds(271, 531, 211, 63);
        btnshpAgregarCliente.setFont(new Font("Dubai", Font.BOLD, 13));
        btnshpAgregarCliente.setForegroundHover(Color.white);
        btnshpAgregarCliente.backgroundHover = new Color(192, 192, 192);
        btnshpAgregarCliente.setBackgroundHover(new Color(3, 33, 57));
        btnshpAgregarCliente.setForegroundText(Color.white);
        btnshpAgregarCliente.setForeground(Color.gray);
        btnshpAgregarCliente.setBackground(new Color(0, 51, 102));
        btnshpAgregarCliente.setHorizontalAlignment(SwingConstants.CENTER);
        btnshpAgregarCliente.setText("   ACEPTAR");
        btnshpAgregarCliente.setIcon(FontIcon.of(FontAwesomeSolid.SAVE, 40, Color.white));
        btnshpAgregarCliente.setForma(RSButtonShape.FORMA.ROUND);
        
        RSButtonShape btnshpVolverCliente = new RSButtonShape();
        btnshpVolverCliente.addActionListener(new ActionListener() {
        	@Override
        	public void actionPerformed(ActionEvent e) {
            	MainMenu.panelBody.removeAll();
            	MainMenu.panelBody.add(new MenuPropiedades());
            	MainMenu.panelBody.repaint();
            	MainMenu.panelBody.revalidate();
        	}
        });
        btnshpVolverCliente.setBounds(521, 531, 211, 63);
        btnshpVolverCliente.setFont(new Font("Dubai", Font.BOLD, 13));
        btnshpVolverCliente.setForegroundHover(new Color(3, 33, 57));
        btnshpVolverCliente.setBackgroundHover(new Color(128, 128, 128));
        btnshpVolverCliente.setForegroundText(new Color(3, 33, 57));
        btnshpVolverCliente.setForeground(new Color(0, 128, 128));
        btnshpVolverCliente.setBackground(new Color(220, 220, 220));
        btnshpVolverCliente.setText("   VOLVER");
        btnshpVolverCliente.setHorizontalAlignment(SwingConstants.CENTER);
        btnshpVolverCliente.setIcon(FontIcon.of(Entypo.BACK, 40, new Color(0, 51, 102)));
        btnshpVolverCliente.setForma(RSButtonShape.FORMA.ROUND);
        setLayout(null);
        add(lblTitulo);
        add(btnshpAgregarCliente);
        add(btnshpVolverCliente);
        
        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setBounds(10, 61, 272, 428);
        add(scrollPane);
        tblImagen.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent arg0) {
        		DefaultTableModel model = (DefaultTableModel)tblImagen.getModel();
        		rol = model.getValueAt(tblImagen.getSelectedRow(), 0).toString();
        		System.out.println("El ROL seleccionado es: "+rol);
        		btnshpAgregarCliente.setEnabled(true);
        		
        	}
        });
        

        tblImagen.setFont(new Font("Dubai", Font.BOLD, 12));
        tblImagen.setFontHead(new Font("Dubai", Font.BOLD, 14));
        tblImagen.setColorSecundaryText(new Color(0, 0, 128));
        tblImagen.setBackgoundHover(new Color(47, 79, 79));
        tblImagen.setBackgoundHead(new Color(0, 128, 128));
        tblImagen.setColorPrimaryText(new Color(25, 25, 112));
        tblImagen.setShowVerticalLines(true);
        tblImagen.setModel(new DefaultTableModel(
        	new Object[][] {
        		{null, null},
        	},
        	new String[] {
        		"ID", "NOMBRE ARCHIVO"
        	}
        ));
        tblImagen.getColumnModel().getColumn(0).setPreferredWidth(59);
        tblImagen.getColumnModel().getColumn(1).setPreferredWidth(192);
        scrollPane.setViewportView(tblImagen);
        
        RSButtonShape buttonShape = new RSButtonShape();
        buttonShape.setText("   BUSCAR");
        buttonShape.setHorizontalAlignment(SwingConstants.CENTER);
        buttonShape.setForma(RSButtonShape.FORMA.ROUND);
        buttonShape.setForegroundText(Color.WHITE);
        buttonShape.setForegroundHover(Color.WHITE);
        buttonShape.setForeground(Color.GRAY);
        buttonShape.setFont(new Font("Dubai", Font.BOLD, 13));
        buttonShape.backgroundHover = SystemColor.controlShadow;
        buttonShape.setBackgroundHover(SystemColor.controlShadow);
        buttonShape.setBackground(new Color(0, 51, 102));
        buttonShape.setBounds(567, 61, 140, 42);
        add(buttonShape);
        
        RSLabelTextIcon lbltxtcnSdfs = new RSLabelTextIcon();
        lbltxtcnSdfs.setIcons(ICONS.CAMERA_ALT);
        lbltxtcnSdfs.setForeground(new Color(25, 25, 112));
        lbltxtcnSdfs.setText("AGREGAR IMAGEN");
        lbltxtcnSdfs.setBounds(342, 63, 200, 40);
        add(lbltxtcnSdfs);
        
        JPanel panel = new JPanel();
        panel.setBorder(new LineBorder(new Color(25, 25, 112)));
        panel.setBounds(331, 119, 401, 370);
        add(panel);
        panel.setLayout(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void llenarTabla() {
		// TODO Auto-generated method stub
		ArrayList<Propiedad> lista = new ArrayList<Propiedad>();
		ConectPropiedades cprop = new ConectPropiedades();
		lista = cprop.listarPropiedades();
		
		String[] col = {"ID", "NOMBRE ARCHIVO"};
		DefaultTableModel tableModel = new DefaultTableModel(col, 0);
		
		for (Propiedad prop : lista) {
			tableModel.addRow( new Object[]{prop.getRol_propie(), prop.getNom_propiedad(), prop.getDireccion(), prop.getValor_noche(), prop.getInven_valori()});
		}
		
		tblImagen.setModel(tableModel);
		
	}
    
    
    private javax.swing.JLabel lblTitulo;
    
    class UppercaseDocumentFilter extends DocumentFilter {
        public void insertString(DocumentFilter.FilterBypass fb, int offset,
                String text, AttributeSet attr) throws BadLocationException {

            fb.insertString(offset, text.toUpperCase(), attr);
        }

        public void replace(DocumentFilter.FilterBypass fb, int offset, int length,
                String text, AttributeSet attrs) throws BadLocationException {

            fb.replace(offset, length, text.toUpperCase(), attrs);
        }
    }
}
