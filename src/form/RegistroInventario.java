/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;
import javax.swing.SwingConstants;

import org.kordamp.ikonli.entypo.Entypo;
import org.kordamp.ikonli.fontawesome5.FontAwesomeSolid;
import org.kordamp.ikonli.swing.FontIcon;

import Controlador.ConectInventario;
import Modelo.Inventario;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import RSMaterialComponent.RSButtonIconOne;
import rojeru_san.efectos.ValoresEnum.ICONS;
import RSMaterialComponent.RSButtonIconTwo;

import java.awt.Color;
import java.awt.Font;
import necesario.Global.THEMETOOLTIP;
import RSMaterialComponent.RSButtonShapeIcon;
import RSMaterialComponent.RSButtonShapeIcon.FORMA;
import Vista.MainMenu;
import RSMaterialComponent.RSButtonShape;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import RSMaterialComponent.RSTextFieldTwo;
import newscomponents.RSDateChooser;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import RSMaterialComponent.RSTextFieldOne;
import java.awt.SystemColor;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import rojeru_san.complementos.RSCustomPopuMenu;
import RSMaterialComponent.RSComboBox;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author RavenPC
 */
public class RegistroInventario extends javax.swing.JPanel {

	private static final String EMAIL_PATTERN = 
		    "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
		    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

	DocumentFilter filter = new UppercaseDocumentFilter();
	
    /**
     * Creates new form Panel1
     */
    public RegistroInventario() {
    	setBackground(new Color(255, 255, 255));
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel1.setBounds(0, 0, 785, 37);
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);

        jLabel1.setBackground(new Color(0, 80, 112));
        jLabel1.setFont(new Font("Dubai", Font.BOLD, 20)); // NOI18N
        jLabel1.setText("Registrar un Activo Fijo / Comodidad");
        jLabel1.setOpaque(true);
        
        RSButtonShape btnshpAgregarCliente = new RSButtonShape();

        btnshpAgregarCliente.setBounds(295, 302, 211, 63);
        btnshpAgregarCliente.setFont(new Font("Dubai", Font.BOLD, 13));
        btnshpAgregarCliente.setForegroundHover(Color.white);
        btnshpAgregarCliente.backgroundHover = UIManager.getColor("Button.shadow");
        btnshpAgregarCliente.setBackgroundHover(new Color(3, 33, 57));
        btnshpAgregarCliente.setForegroundText(Color.white);
        btnshpAgregarCliente.setForeground(Color.gray);
        btnshpAgregarCliente.setBackground(new Color(0, 51, 102));
        btnshpAgregarCliente.setHorizontalAlignment(SwingConstants.CENTER);
        btnshpAgregarCliente.setText("   REGISTRAR");
        btnshpAgregarCliente.setIcon(FontIcon.of(FontAwesomeSolid.SAVE, 40, Color.white));
        btnshpAgregarCliente.setForma(RSButtonShape.FORMA.ROUND);
        
        RSButtonShape btnshpBuscarCliente = new RSButtonShape();
        btnshpBuscarCliente.addActionListener(new ActionListener() {
        	@Override
        	public void actionPerformed(ActionEvent e) {
            	MainMenu.panelBody.removeAll();
            	MainMenu.panelBody.add(new MenuInventario());
            	MainMenu.panelBody.repaint();
            	MainMenu.panelBody.revalidate();
        	}
        });
        btnshpBuscarCliente.setBounds(520, 302, 211, 63);
        btnshpBuscarCliente.setFont(new Font("Dubai", Font.BOLD, 13));
        btnshpBuscarCliente.setForegroundHover(new Color(3, 33, 57));
        btnshpBuscarCliente.setBackgroundHover(new Color(128, 128, 128));
        btnshpBuscarCliente.setForegroundText(new Color(3, 33, 57));
        btnshpBuscarCliente.setForeground(new Color(0, 128, 128));
        btnshpBuscarCliente.setBackground(new Color(211, 211, 211));
        btnshpBuscarCliente.setText("   CANCELAR");
        btnshpBuscarCliente.setHorizontalAlignment(SwingConstants.CENTER);
        btnshpBuscarCliente.setIcon(FontIcon.of(Entypo.BLOCK, 40, new Color(0, 51, 102)));
        btnshpBuscarCliente.setForma(RSButtonShape.FORMA.ROUND);
        
        JLabel lblRUT = new JLabel("Nombre:");
        lblRUT.setForeground(new Color(3, 33,  57));
        lblRUT.setBounds(52, 64, 120, 33);
        lblRUT.setHorizontalAlignment(SwingConstants.RIGHT);
        lblRUT.setFont(new Font("Dubai", Font.BOLD, 20));
        setLayout(null);
        add(jLabel1);
        add(btnshpAgregarCliente);
        add(btnshpBuscarCliente);
        add(lblRUT);
        
        JLabel lblApellidoPaterno = new JLabel("Costo:");
        lblApellidoPaterno.setForeground(new Color(3, 33,  57));
        lblApellidoPaterno.setHorizontalAlignment(SwingConstants.RIGHT);
        lblApellidoPaterno.setFont(new Font("Dubai", Font.BOLD, 20));
        lblApellidoPaterno.setBounds(-14, 122, 186, 33);
        add(lblApellidoPaterno);
        
        RSTextFieldOne txtNombre = new RSTextFieldOne();
        txtNombre.setPlaceholder("Ej: CAMA DE 1 PLAZA");
        txtNombre.setPhColor(SystemColor.controlDkShadow);
        txtNombre.setForeground(new Color(25, 25, 112));
        txtNombre.setFont(new Font("Dubai", Font.BOLD, 20));
        txtNombre.setBorderColor(new Color(3, 33, 57));
        txtNombre.setBounds(182, 60, 361, 42);
        add(txtNombre);
        
        RSTextFieldOne txtCosto = new RSTextFieldOne();
        txtCosto.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
              char c = e.getKeyChar();
              if (!((c >= '0') && (c <= '9') ||
                 (c == KeyEvent.VK_BACK_SPACE) ||
                 (c == KeyEvent.VK_DELETE))) {
                getToolkit().beep();
                e.consume();
              }
              boolean max = txtCosto.getText().length() >= 9;
              if ( max ){
                  e.consume();
              }   
            }
          });
        txtCosto.setPlaceholder("$");
        txtCosto.setPhColor(SystemColor.controlDkShadow);
        txtCosto.setForeground(new Color(25, 25, 112));
        txtCosto.setFont(new Font("Dubai", Font.BOLD, 20));
        txtCosto.setBorderColor(new Color(3, 33, 57));
        txtCosto.setBounds(182, 118, 166, 42);
        add(txtCosto);
        
        JLabel lblEstadoDelProducto = new JLabel("Estado:");
        lblEstadoDelProducto.setHorizontalAlignment(SwingConstants.RIGHT);
        lblEstadoDelProducto.setForeground(new Color(3, 33, 57));
        lblEstadoDelProducto.setFont(new Font("Dubai", Font.BOLD, 20));
        lblEstadoDelProducto.setBounds(52, 171, 120, 33);
        add(lblEstadoDelProducto);
        
        RSComboBox cmbEstado = new RSComboBox();
        cmbEstado.setModel(new DefaultComboBoxModel(new String[] {"NUEVO", "USADO", "NO APLICA"}));
        cmbEstado.setForeground(new Color(25, 25, 112));
        cmbEstado.setFont(new Font("Dubai", Font.BOLD, 16));
        cmbEstado.setConBorde(true);
        cmbEstado.setColorSeleccion(new Color(25, 25, 112));
        cmbEstado.setColorFondo(Color.WHITE);
        cmbEstado.setColorBorde(new Color(3, 33, 57));
        cmbEstado.setColorArrow(new Color(25, 25, 112));
        cmbEstado.setBounds(180, 172, 166, 32);
        add(cmbEstado);
        
        JLabel lblTipoDeProducto = new JLabel("Tipo de Producto:");
        lblTipoDeProducto.setHorizontalAlignment(SwingConstants.RIGHT);
        lblTipoDeProducto.setForeground(new Color(3, 33, 57));
        lblTipoDeProducto.setFont(new Font("Dubai", Font.BOLD, 20));
        lblTipoDeProducto.setBounds(-14, 215, 186, 33);
        add(lblTipoDeProducto);
        
        RSComboBox cmbTipo = new RSComboBox();
        cmbTipo.setModel(new DefaultComboBoxModel(new String[] {"ACTIVO FIJO", "COMODIDAD"}));
        cmbTipo.setForeground(new Color(25, 25, 112));
        cmbTipo.setFont(new Font("Dubai", Font.BOLD, 16));
        cmbTipo.setConBorde(true);
        cmbTipo.setColorSeleccion(new Color(25, 25, 112));
        cmbTipo.setColorFondo(Color.WHITE);
        cmbTipo.setColorBorde(new Color(3, 33, 57));
        cmbTipo.setColorArrow(new Color(25, 25, 112));
        cmbTipo.setBounds(180, 216, 166, 32);
        add(cmbTipo);
        
        btnshpAgregarCliente.addActionListener(new ActionListener() {
        	@Override
        	public void actionPerformed(ActionEvent e) {
        		ConectInventario cinv = new ConectInventario();
        		Inventario inv = new Inventario();
        		inv.setNombre(txtNombre.getText());
        		inv.setCosto(Integer.parseInt(txtCosto.getText()));
        		if (cmbEstado.getSelectedItem().equals("NUEVO")) {
        			inv.setEstado('N');
				}else if (cmbEstado.getSelectedItem().equals("USADO")) {
					inv.setEstado('U');
				}else if (cmbEstado.getSelectedItem().equals("NO APLICA")) {
					inv.setEstado('O');
				}
      
        		if (cmbTipo.getSelectedItem().equals("ACTIVO FIJO")) {
					inv.setTipo_inventario(1);
				}else {
					inv.setTipo_inventario(2);
				}
        		

        		boolean respuesta = cinv.registrarInventario(inv);
        		if (respuesta) {
        			JOptionPane.showMessageDialog(null, "EL PRODUCTO FUE GUARDADO EXITOSAMENTE", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
				}else {
					txtNombre.requestFocus();
				}
        		    	
        		//MensajeOK mensaje = new MensajeOK("GUARDAR CLIENTE", "EL CLIENTE FUE GUARDADO EXITOSAMENTE");
        		//mensaje.setVisible(true);
            	//MainMenu.panelBody.removeAll();
            	//MainMenu.panelBody.add(new MenuInventario());
            	//MainMenu.panelBody.repaint();
            	//MainMenu.panelBody.revalidate();
        	
        	}
        });
        
    }// </editor-fold>//GEN-END:initComponents
    private javax.swing.JLabel jLabel1;
    
    class UppercaseDocumentFilter extends DocumentFilter {
        public void insertString(DocumentFilter.FilterBypass fb, int offset,
                String text, AttributeSet attr) throws BadLocationException {

            fb.insertString(offset, text.toUpperCase(), attr);
        }

        public void replace(DocumentFilter.FilterBypass fb, int offset, int length,
                String text, AttributeSet attrs) throws BadLocationException {

            fb.replace(offset, length, text.toUpperCase(), attrs);
        }
    }
}
